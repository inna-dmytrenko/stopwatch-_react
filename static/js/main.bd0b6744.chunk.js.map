{"version":3,"sources":["components/Stopwatch/Stopwatch.module.css","helpers/timeToString.js","components/Stopwatch/Stopwatch.js","App.js","index.js"],"names":["module","exports","timeToString","time","diffInHH","hh","Math","floor","diffInMin","mm","ss","formattedHH","formattedMM","formattedSS","OutlinedButtons","useState","state","setState","setTime","stop$","useMemo","Subject","click$","stop","useCallback","reset","useEffect","doubleClick$","pipe","buffer","debounceTime","map","list","length","filter","value","subscribtion$","Observable","observer","count","intervalId","setInterval","next","clearInterval","takeUntil","subscribe","prev","unsubscribe","wait","className","styles","stopwatch","gold","circle","id","Stack","direction","spacing","Button","variant","onClick","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd0b6744.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopwatch\":\"Stopwatch_stopwatch__PLpCz\",\"circle\":\"Stopwatch_circle__12Q1Y\",\"time\":\"Stopwatch_time__3E8Ig\",\"gold\":\"Stopwatch_gold__3V3wE\"};","const timeToString = (time) => {\n  let diffInHH = time / 3600;\n  const hh = Math.floor(diffInHH);\n  let diffInMin = time / 60;\n  const mm = Math.floor(diffInMin);\n  let diffInSec = time % 60;\n  const ss = diffInSec;\n  const formattedHH =\n    hh < 1 || hh > 23 ? \"00\" : hh >= 1 && hh <= 9 ? `0${hh}` : `${hh}`;\n  const formattedMM = mm < 10 ? (mm === 0 ? \"00\" : `0${mm}`) : `${mm}`;\n  const formattedSS = ss < 10 ? `0${ss}` : `${ss}`;\n\n  return `${formattedHH}:${formattedMM}:${formattedSS}`;\n};\nexport default timeToString;\n","import { useEffect, useState, useCallback, useMemo } from \"react\";\nimport { Observable, Subject } from \"rxjs\";\nimport { map, buffer, debounceTime, filter, takeUntil } from \"rxjs/operators\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport timeToString from \"../../helpers/timeToString\";\n\nimport styles from \"./Stopwatch.module.css\";\n\nexport default function OutlinedButtons() {\n  const [state, setState] = useState(\"stop\");\n  const [time, setTime] = useState(0);\n\n  const stop$ = useMemo(() => new Subject(), []);\n  const click$ = useMemo(() => new Subject(), []);\n  const start = () => {\n    setState(\"start\");\n  };\n  const stop = useCallback(() => {\n    setTime(0);\n    setState(\"stop\");\n  }, []);\n\n  const reset = useCallback(() => {\n    setTime(0);\n  }, []);\n\n  useEffect(() => {\n    const doubleClick$ = click$.pipe(\n      buffer(click$.pipe(debounceTime(300))),\n      map((list) => list.length),\n      filter((value) => value >= 2)\n    );\n    const timer$ = new Observable((observer) => {\n      let count = 0;\n      const intervalId = setInterval(() => {\n        observer.next((count += 1));\n      }, 1000);\n      return () => {\n        clearInterval(intervalId);\n      };\n    });\n    const subscribtion$ = timer$\n      .pipe(takeUntil(doubleClick$))\n      .pipe(takeUntil(stop$))\n      .subscribe({\n        next: () => {\n          if (state === \"start\") {\n            setTime((prev) => prev + 1);\n          }\n        },\n      });\n\n    return () => {\n      subscribtion$.unsubscribe();\n    };\n  }, [state, click$, stop$]);\n\n  const wait = useCallback(() => {\n    const doubleClick$ = click$.pipe(\n      buffer(click$.pipe(debounceTime(300))),\n      map((list) => list.length),\n      filter((value) => value >= 2)\n    );\n    const timer$ = new Observable((observer) => {\n      let count = 0;\n      const intervalId = setInterval(() => {\n        observer.next((count += 1));\n      }, 1000);\n      return () => {\n        clearInterval(intervalId);\n      };\n    });\n    const subscribtion$ = timer$\n      .pipe(takeUntil(doubleClick$))\n      .pipe(takeUntil(stop$))\n      .subscribe({\n        next: () => {\n          if (state === \"start\") {\n            setTime((prev) => prev + 1);\n          }\n        },\n      });\n    click$.next();\n    setState(\"wait\");\n    return () => {\n      subscribtion$.unsubscribe();\n    };\n  }, [state, click$, stop$]);\n  return (\n    <>\n      <div className={styles.stopwatch}>\n        <h1>\n          <span className={styles.gold}>GOLD</span> STOPWATCH\n        </h1>\n        <div className={styles.circle}>\n          <span className={styles.time} id=\"display\">\n            <h1 className=\"stopwatch indicator\">{timeToString(time)}</h1>\n          </span>\n        </div>\n\n        <Stack direction=\"row\" spacing={2}>\n          {state !== \"start\" ? (\n            <Button variant=\"outlined\" onClick={start}>\n              Start\n            </Button>\n          ) : (\n            <Button variant=\"outlined\" onClick={stop}>\n              Stop{\" \"}\n            </Button>\n          )}\n\n          <Button variant=\"outlined\" onClick={wait}>\n            Wait\n          </Button>\n\n          <Button variant=\"outlined\" href=\"#outlined-buttons\" onClick={reset}>\n            Reset\n          </Button>\n        </Stack>\n      </div>\n    </>\n  );\n}\n","import Stopwatch from \"./components/Stopwatch/Stopwatch\";\n\n// import OutlinedButtons from './components/Stopwatch/Stopwatch'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stopwatch />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}