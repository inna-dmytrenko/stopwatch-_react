{"version":3,"sources":["components/Stopwatch/Stopwatch.module.css","helpers/timeToString.js","components/Stopwatch/Stopwatch.js","App.js","index.js"],"names":["module","exports","timeToString","time","diffInHH","hh","Math","floor","diffInMin","mm","ss","formattedHH","formattedMM","formattedSS","OutlinedButtons","useState","state","setState","setTime","stop$","useMemo","Subject","click$","stop","useCallback","reset","useEffect","doubleClick$","pipe","buffer","debounceTime","map","list","length","filter","value","subscribtion$","Observable","observer","count","intervalId","setInterval","next","clearInterval","takeUntil","subscribe","prev","unsubscribe","wait","className","styles","stopwatch","gold","circle","id","Stack","direction","spacing","Button","variant","onClick","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2506e5f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopwatch\":\"Stopwatch_stopwatch__PLpCz\",\"circle\":\"Stopwatch_circle__12Q1Y\",\"time\":\"Stopwatch_time__3E8Ig\",\"gold\":\"Stopwatch_gold__3V3wE\"};","const timeToString = (time) => {\r\n  let diffInHH = time / 3600\r\n  const hh = Math.floor(diffInHH)\r\n  let diffInMin = time / 60\r\n  const mm = Math.floor(diffInMin)\r\n  let diffInSec = time % 60\r\n  const ss = diffInSec\r\n  const formattedHH =\r\n    hh < 1 || hh > 23 ? '00' : hh >= 1 && hh <= 9 ? `0${hh}` : `${hh}`\r\n  const formattedMM = mm < 10 ? (mm === 0 ? '00' : `0${mm}`) : `${mm}`\r\n  const formattedSS = ss < 10 ? `0${ss}` : `${ss}`\r\n\r\n  return `${formattedHH}:${formattedMM}:${formattedSS}`\r\n}\r\nexport default timeToString\r\n","import { useEffect, useState, useCallback, useMemo } from 'react'\r\nimport { Observable, Subject } from 'rxjs'\r\nimport { map, buffer, debounceTime, filter, takeUntil } from 'rxjs/operators'\r\nimport Button from '@mui/material/Button'\r\nimport Stack from '@mui/material/Stack'\r\nimport timeToString from '../../helpers/timeToString'\r\n\r\nimport styles from './Stopwatch.module.css'\r\n\r\nexport default function OutlinedButtons() {\r\n  const [state, setState] = useState('stop')\r\n  const [time, setTime] = useState(0)\r\n\r\n  const stop$ = useMemo(() => new Subject(), [])\r\n  const click$ = useMemo(() => new Subject(), [])\r\n  const start = () => {\r\n    setState('start')\r\n  }\r\n  const stop = useCallback(() => {\r\n    setTime(0)\r\n    setState('stop')\r\n  }, [])\r\n\r\n  const reset = useCallback(() => {\r\n    setTime(0)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const doubleClick$ = click$.pipe(\r\n      buffer(click$.pipe(debounceTime(300))),\r\n      map((list) => list.length),\r\n      filter((value) => value >= 2),\r\n    )\r\n    const timer$ = new Observable((observer) => {\r\n      let count = 0\r\n      const intervalId = setInterval(() => {\r\n        observer.next((count += 1))\r\n      }, 1000)\r\n      return () => {\r\n        clearInterval(intervalId)\r\n      }\r\n    })\r\n    const subscribtion$ = timer$\r\n      .pipe(takeUntil(doubleClick$))\r\n      .pipe(takeUntil(stop$))\r\n      .subscribe({\r\n        next: () => {\r\n          if (state === 'start') {\r\n            setTime((prev) => prev + 1)\r\n          }\r\n        },\r\n      })\r\n\r\n    return () => {\r\n      subscribtion$.unsubscribe()\r\n    }\r\n  }, [state, click$, stop$])\r\n\r\n  const wait = useCallback(() => {\r\n    const doubleClick$ = click$.pipe(\r\n      buffer(click$.pipe(debounceTime(300))),\r\n      map((list) => list.length),\r\n      filter((value) => value >= 2),\r\n    )\r\n    const timer$ = new Observable((observer) => {\r\n      let count = 0\r\n      const intervalId = setInterval(() => {\r\n        observer.next((count += 1))\r\n      }, 1000)\r\n      return () => {\r\n        clearInterval(intervalId)\r\n      }\r\n    })\r\n    const subscribtion$ = timer$\r\n      .pipe(takeUntil(doubleClick$))\r\n      .pipe(takeUntil(stop$))\r\n      .subscribe({\r\n        next: () => {\r\n          if (state === 'start') {\r\n            setTime((prev) => prev + 1)\r\n          }\r\n        },\r\n      })\r\n    click$.next()\r\n    setState('wait')\r\n    return () => {\r\n      subscribtion$.unsubscribe()\r\n    }\r\n  }, [state, click$, stop$])\r\n  return (\r\n    <>\r\n      <div className={styles.stopwatch}>\r\n        <h1>\r\n          <span className={styles.gold}>GOLD</span> STOPWATCH\r\n        </h1>\r\n        <div className={styles.circle}>\r\n          <span className={styles.time} id=\"display\">\r\n            <h1 className=\"stopwatch indicator\">{timeToString(time)}</h1>\r\n          </span>\r\n        </div>\r\n\r\n        <Stack direction=\"row\" spacing={2}>\r\n          {state !== 'start' ? (\r\n            <Button variant=\"outlined\" onClick={start}>\r\n              Start\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"outlined\" onClick={stop}>\r\n              Stop{' '}\r\n            </Button>\r\n          )}\r\n\r\n          <Button variant=\"outlined\" onClick={wait}>\r\n            Wait\r\n          </Button>\r\n\r\n          <Button variant=\"outlined\" href=\"#outlined-buttons\" onClick={reset}>\r\n            Reset\r\n          </Button>\r\n        </Stack>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import Stopwatch from './components/Stopwatch/Stopwatch'\n\n// import OutlinedButtons from './components/Stopwatch/Stopwatch'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stopwatch />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}